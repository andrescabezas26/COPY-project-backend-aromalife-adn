name: CI/CD - SonarQube + Trivy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read 
  security-events: write
  actions: read
  pull-requests: read  # Añadido para PRs

jobs:
  sonar-trivy:
    name: SonarQube + Trivy Scan
    runs-on: ubuntu-latest
    
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    steps:
      # ✅ UN SOLO CHECKOUT al inicio
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para SonarQube
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: 📦 Install dependencies
        run: npm install
      
      - name: 🧪 Run tests with coverage
        run: npm run test:cov
        continue-on-error: true
      
      # 🔍 SONARQUBE
      - name: 📥 Install Sonar Scanner
        run: npm install -g sonarqube-scanner
      
      - name: ℹ️ Check Sonar Scanner version
        run: sonar-scanner --version
      
      - name: 🔍 SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.projectKey=aromalife-backend
      
      # 🛡️ TRIVY SCAN - SARIF para GitHub Security
      - name: 🔍 Run Trivy vulnerability scanner (SARIF)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH,MEDIUM"
          exit-code: "0"
      
      - name: 📊 Upload Trivy SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
          category: "trivy-fs"  # Identificador único
      
      # 📄 TRIVY SCAN - JSON para artifact
      - name: 🔍 Run Trivy vulnerability scanner (JSON)
        uses: aquasecurity/trivy-action@0.28.0
        if: always()
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "json"
          output: "trivy-report.json"
          severity: "CRITICAL,HIGH,MEDIUM"
      
      - name: 📤 Upload Trivy JSON report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-security-report
          path: trivy-report.json
          retention-days: 30
